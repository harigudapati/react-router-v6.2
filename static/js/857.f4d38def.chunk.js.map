{"version":3,"file":"static/js/857.f4d38def.chunk.js","mappings":"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","sources":["components/hooks/use-http.js","components/lib/api.js","webpack://react-router-example/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","webpack://react-router-example/./src/components/comments/Comments.module.css?d88e","webpack://react-router-example/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://react-router-example/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","components/comments/Comments.js","webpack://react-router-example/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"sourcesContent":["import { useCallback, useReducer } from \"react\";\n\nfunction httpReducer(state, action) {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"completed\",\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async (requestedData) => {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestedData);\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMesssage: error.message || \"Something went wrong\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN =\n  'https://quote-http-1c8c4-default-rtdb.asia-southeast1.firebasedatabase.app'\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`)\n  const data = await response.json()\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes')\n  }\n\n  const transformedQuotes = []\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    }\n\n    transformedQuotes.push(quoteObj)\n  }\n\n  return transformedQuotes\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`)\n  const data = await response.json()\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.')\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  }\n\n  return loadedQuote\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  const data = await response.json()\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote')\n  }\n  return null\n}\n\nexport async function addComment(requestedData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestedData.quoteId}.json`,\n    {\n      method: 'POST',\n      body: JSON.stringify(requestedData.commentData),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n  )\n  const data = await response.json()\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comments')\n  }\n  return { commentId: data.name }\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`)\n  const data = await response.json()\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get commets.')\n  }\n\n  const transformedComments = []\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    }\n    transformedComments.push(commentObj)\n  }\n  return transformedComments\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__C3cQf\",\"loading\":\"NewCommentForm_loading__aSq20\",\"control\":\"NewCommentForm_control__iR6jS\",\"actions\":\"NewCommentForm_actions__NC323\"};","import { useEffect, useRef } from \"react\";\nimport classes from \"./NewCommentForm.module.css\";\nimport useHttp from \"../hooks/use-http\";\nimport { addComment } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (e) => {\n    e.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef} />\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\nexport default NewCommentForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__9cxIN\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__+vwzS\"};","import classes from './CommentItem.module.css'\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  )\n}\n\nexport default CommentItem\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__UVWAR\"};","import CommentItem from './CommentItem'\nimport classes from './CommentsList.module.css'\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  )\n}\n\nexport default CommentsList\n","import { useCallback, useEffect, useState } from 'react'\nimport NewCommentForm from './NewCommentForm'\nimport classes from './Comments.module.css'\nimport { useParams } from 'react-router-dom'\nimport useHttp from '../hooks/use-http'\nimport { getAllComments } from '../lib/api'\nimport LoadingSpinner from '../UI/LoadingSpinner'\nimport CommentsList from './CommentsList'\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false)\n  const params = useParams()\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments)\n\n  const { quoteId } = params\n\n  let comments\n\n  useEffect(() => {\n    sendRequest(quoteId)\n  }, [quoteId, sendRequest])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true)\n  }\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />\n  }\n\n  if (status === 'completed' && !loadedComments && loadedComments.length < 0) {\n    comments = <p className='centered'>No comments were added yet!</p>\n  }\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId])\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  )\n}\nexport default Comments\n","// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__dE8qA\"};","import classes from './HighlightedQuote.module.css'\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  )\n}\nexport default HighlightedQuote\n","import { Fragment, useEffect } from 'react'\nimport { Link, Routes, Route, useParams } from 'react-router-dom'\nimport Comments from '../components/comments/Comments'\nimport useHttp from '../components/hooks/use-http'\nimport { getSingleQuote } from '../components/lib/api'\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\n\nconst QuoteDetail = () => {\n  const params = useParams()\n  const {\n    sendRequest,\n    data: loadedQuote,\n    error,\n    status\n  } = useHttp(getSingleQuote, true)\n  const { quoteId } = params\n\n  useEffect(() => {\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId])\n\n  if (status === 'pending') {\n    return (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n  if (error) {\n    return <p className='centered'>{error}</p>\n  }\n\n  if (!loadedQuote.text) {\n    return <p>No quote found!</p>\n  }\n  return (\n    <>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Routes>\n        <Route\n          path=''\n          element={\n            <div className='centered'>\n              <Link className='btn--flat' to='comments'>\n                Load Comments\n              </Link>\n            </div>\n          }\n        />\n        <Route path='comments' element={<Comments />} />\n      </Routes>\n    </>\n  )\n}\nexport default QuoteDetail\n"],"names":["httpReducer","state","action","type","data","error","status","responseData","errorMessage","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestedData","errorMesssage","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","props","commentTextRef","useRef","useHttp","onAddedComment","useEffect","className","classes","onSubmit","e","preventDefault","enteredText","current","value","text","LoadingSpinner","htmlFor","rows","ref","comments","map","comment","useState","isAddingComment","setIsAddingComment","params","useParams","loadedComments","length","addedCommentHandler","onClick","author","path","element","to"],"sourceRoot":""}