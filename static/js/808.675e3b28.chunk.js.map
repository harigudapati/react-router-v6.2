{"version":3,"file":"static/js/808.675e3b28.chunk.js","mappings":"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","sources":["components/hooks/use-http.js","components/lib/api.js","webpack://react-router-example/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","webpack://react-router-example/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-router-example/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","pages/AllQuotes.js"],"sourcesContent":["import { useCallback, useReducer } from \"react\";\n\nfunction httpReducer(state, action) {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"completed\",\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async (requestedData) => {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestedData);\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMesssage: error.message || \"Something went wrong\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN =\n  'https://quote-http-1c8c4-default-rtdb.asia-southeast1.firebasedatabase.app'\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`)\n  const data = await response.json()\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes')\n  }\n\n  const transformedQuotes = []\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    }\n\n    transformedQuotes.push(quoteObj)\n  }\n\n  return transformedQuotes\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`)\n  const data = await response.json()\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.')\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  }\n\n  return loadedQuote\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  const data = await response.json()\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote')\n  }\n  return null\n}\n\nexport async function addComment(requestedData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestedData.quoteId}.json`,\n    {\n      method: 'POST',\n      body: JSON.stringify(requestedData.commentData),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n  )\n  const data = await response.json()\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comments')\n  }\n  return { commentId: data.name }\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`)\n  const data = await response.json()\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get commets.')\n  }\n\n  const transformedComments = []\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    }\n    transformedComments.push(commentObj)\n  }\n  return transformedComments\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__EUQsM\"};","import { Link } from 'react-router-dom'\nimport classes from './NoQuotesFound.module.css'\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a quote\n      </Link>\n    </div>\n  )\n}\nexport default NoQuotesFound\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__Q6KwW\"};","import { Link } from 'react-router-dom'\nimport classes from './QuoteItem.module.css'\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className='btn'>\n        View Fullscreen\n      </Link>\n    </li>\n  )\n}\nexport default QuoteItem\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__MLz6k\",\"sorting\":\"QuoteList_sorting__GDrEn\"};","import { Fragment } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport QuoteItem from './QuoteItem'\nimport classes from './QuoteList.module.css'\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1\n    }\n  })\n}\n\nconst QuoteList = (props) => {\n  const location = useLocation()\n  const navigate = useNavigate()\n\n  const queryParams = new URLSearchParams(location.search)\n  const isSortingAscending = queryParams.get('sort') === 'asc'\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending)\n\n  const changeSortingHandler = () => {\n    // alternative approach for navigate\n    // navigate(location.pathname, {\n    //   search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    // });\n\n    navigate(\n      `${location.pathname}?sort=${isSortingAscending ? 'desc' : 'asc'}`\n    )\n  }\n\n  return (\n    <>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? 'Descending' : 'Ascending'}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </>\n  )\n}\nexport default QuoteList\n","import { useEffect } from 'react'\nimport useHttp from '../components/hooks/use-http'\nimport { getAllQuotes } from '../components/lib/api'\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\nimport QuoteList from '../components/quotes/QuoteList'\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true)\n\n  useEffect(() => {\n    sendRequest()\n  }, [sendRequest])\n\n  if (status === 'pending') {\n    return (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n  if (error) {\n    return <p className='centered focused'>{error}</p>\n  }\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />\n  }\n  return <QuoteList quotes={loadedQuotes} />\n}\nexport default AllQuotes\n"],"names":["httpReducer","state","action","type","data","error","status","responseData","errorMessage","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestedData","errorMesssage","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","className","classes","to","props","text","author","quotes","ascending","location","useLocation","navigate","useNavigate","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","onClick","pathname","map","quote","useHttp","loadedQuotes","useEffect","LoadingSpinner","length"],"sourceRoot":""}